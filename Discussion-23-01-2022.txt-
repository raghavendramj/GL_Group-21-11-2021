Question 1
Implement a stack using Two Queues
	Stack -> LIFO Last In First Out
    Queue -> FIFO -> First In First Out

	Elements to insert into the stack
	----------------------->
	2, 	4, 	5, 	1, 	3

Queue1
	Front-> 3 -> 1 -> 5 -> 4 -> 2  Rear

Queue2 (temp)
	Front ->   Rear

	Stack -> Using 2 Queues
		-> Push(data)
			-> if mainQueue is empty
					add the element to queue;
				else
					put all the elements from mainQueue to tempQueue
					add the new element to mainQueue
					put all the elements from tempQueue to mainQueue

			->Pop()
				-> if mainQueue is not empty
						remove the element


Linked List
	Write a program to reverse a linked list without storing itâ€™s data in any other data structure.

	Question :- 1 -> 2 -> 3 -> 4 -> 5 -> NULL
	Result :- 	  5 -> 4 -> 3 -> 2 -> 1 -> NULL

	Node 
		int data, 
		Node next

	Node prev = null;
	Node current = head; 1 -> 2 -> 3 -> 4 -> 5 -> NULL
	Node next = null;


	prev =  NULL
	current =  1 -> 2 -> 3 -> 4 -> 5 -> NULL
	next = NULL;

	while(current != null){
		next = current.next; 			next = 2 -> 3 -> 4 -> 5 -> NULL
		current.next = prev;			current =  1 ->  NULL
		prev = current; 					prev =>  1 ->  NULL
		current = next;					current=>  2 -> 3 -> 4 -> 5 -> NULL
	}



	next = 2 -> 3 -> 4 -> 5 -> NULL
	current=> 2 -> 3 -> 4 -> 5 -> NULL
	prev => 1 -> null

	while(current != null){
		next = current.next; 			next = 3 -> 4 -> 5 -> NULL
		current.next = prev;			current =  2 -> 1 -> null
		prev = current; 					prev = 2 ->  1 -> null
		current = next;					current= 3 -> 4 -> 5 -> NULL
	}

	next = 3 -> 4 -> 5 -> NULL
	current=> 3 -> 4 -> 5 -> NULL
	prev => 2 -> 1 -> null
	
	while(current != null){
		next = current.next; 			next =  4 -> 5 -> NULL
		current.next = prev;			current =  3 -> 2 -> 1 -> null
		prev = current; 					prev =   3 -> 2 -> 1 -> null
		current = next;					current=  4 -> 5 -> NULL
	}

	next =  4 -> 5 -> NULL
	current=  4 -> 5 -> NULL
	prev =   3 -> 2 -> 1 -> null 
		
	while(current != null){
		next = current.next; 			next = 5 -> NULL
		current.next = prev;			current =    4 -> 3 -> 2 -> 1 -> null 
		prev = current; 					prev =     4 -> 3 -> 2 -> 1 -> null 
		current = next;					current=   5 -> NULL
	}
	
	next = 5 -> NULL
	current=   5 -> NULL
	prev =     4 -> 3 -> 2 -> 1 -> null 
		
	while(current != null){
		next = current.next; 			next =  NULL
		current.next = prev;			current =     5 ->  4 -> 3 -> 2 -> 1 -> null 
		prev = current; 					prev =    5 ->  4 -> 3 -> 2 -> 1 -> null 
		current = next;					current=  NULL
	}
	
	
